function_decl func1: 
statement_list : ptr1, ptr2, 
if_stmt : ptr1, ptr2, 
truth_orif_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
type_decl Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
type_decl Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_cst 1: ptr2, 
return_expr : ptr1, ptr2, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr2, 
convert_expr : ptr2, 
modify_expr : ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
type_decl Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
type_decl Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_cst 100: ptr2, 
function_decl func2: 
statement_list : ptr1, ptr2, 
if_stmt : ptr1, ptr2, 
truth_andif_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
type_decl Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
type_decl Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_cst 1: ptr2, 
statement_list : ptr1, ptr2, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr1, ptr2, 
convert_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
test11.cpp: In member function 'void Object1::func2(Data1*, Data1*)':
test11.cpp:25:19: warning: Using parameter 'ptr1' without checking for null pointer
             ptr1->val = 100;
                   ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr1, ptr2, 
convert_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
test11.cpp:29:15: warning: Using parameter 'ptr1' without checking for null pointer
         ptr1->val = 200;
               ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 200: ptr1, ptr2, 
