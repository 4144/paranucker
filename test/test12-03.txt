function_decl func1: 
bind_expr : ptr1, ptr2, 
decl_expr : ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
component_ref : ptr1, ptr2, 
test12.cpp: In member function 'void Object1::func1(Data1*, Data1*)':
test12.cpp:13:45: warning: Using parameter 'ptr2' without checking for null pointer
         int val1 = ptr1 ? ptr1->val : ptr2->val;
                                             ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
block : ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
function_decl func2: 
bind_expr : ptr1, ptr2, 
decl_expr : ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
component_ref : ptr1, ptr2, 
test12.cpp: In member function 'void Object1::func2(Data1*, Data1*)':
test12.cpp:18:36: warning: Using parameter 'ptr1' without checking for null pointer
         int val1 = (!ptr1) ? ptr1->val : ptr2->val;
                                    ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
component_ref : ptr2, 
test12.cpp:18:48: warning: Using parameter 'ptr2' without checking for null pointer
         int val1 = (!ptr1) ? ptr1->val : ptr2->val;
                                                ^
indirect_ref : ptr2, 
parm_decl ptr2: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
block : ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
function_decl func3: 
bind_expr : ptr1, ptr2, 
decl_expr : ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_andif_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
parm_decl ptr2: ptr2, 
integer_cst 0: ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
component_ref : ptr1, ptr2, 
test12.cpp: In member function 'void Object1::func3(Data1*, Data1*)':
test12.cpp:23:56: warning: Using parameter 'ptr2' without checking for null pointer
         int val1 = (ptr1 && !ptr2) ? ptr1->val : ptr2->val;
                                                        ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
block : ptr1, ptr2, 
var_decl val1: ptr1, ptr2, 
function_decl func4: 
if_stmt : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
type_decl Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
type_decl Data1: ptr2, 
integer_cst 64: ptr2, 
test12.cpp: In member function 'void Object1::func4(Data1*, Data1*)':
test12.cpp:28:35: warning: Using parameter 'ptr2' without checking for null pointer
         if ((ptr1 ? ptr1 : ptr2)->val == 100)
                                   ^
parm_decl ptr2: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr1, ptr2, 
convert_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
test12.cpp:30:19: warning: Using parameter 'ptr1' without checking for null pointer
             ptr1->val = 200;
                   ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 200: ptr1, ptr2, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr1, ptr2, 
convert_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
test12.cpp:34:19: warning: Using parameter 'ptr2' without checking for null pointer
             ptr2->val = 300;
                   ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
type_decl Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 300: ptr1, ptr2, 
function_decl func5: 
bind_expr : ptr1, ptr2, 
decl_expr : ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr2, 
test12.cpp: In member function 'void Object1::func5(Data1*, Data1*)':
test12.cpp:40:41: warning: Using parameter 'ptr2' without checking for null pointer
         int tmp = (ptr1 ? ptr1 : ptr2)->val;
                                         ^
parm_decl ptr2: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
block : ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
function_decl func6: 
bind_expr : ptr1, ptr2, 
decl_expr : ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl ptr2: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
integer_cst 0: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
block : ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
function_decl func7: 
bind_expr : ptr1, ptr2, 
decl_expr : ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
cond_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
component_ref : ptr1, ptr2, 
test12.cpp: In member function 'void Object1::func7(Data1*, Data1*)':
test12.cpp:50:53: warning: Using parameter 'ptr2' without checking for null pointer
         int tmp = ptr1 ? ptr1->val : (!ptr2 ? ptr2->val : 0);
                                                     ^
indirect_ref : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
integer_cst 0: ptr1, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
block : ptr1, ptr2, 
var_decl tmp: ptr1, ptr2, 
