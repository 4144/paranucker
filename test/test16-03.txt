function_decl func1: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_orif_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
integer_cst 100: ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 100: ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 200: ptr2, 
block : ptr1, ptr2, 
function_decl func2: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_andif_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
integer_cst 100: ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 100: ptr2, 
statement_list : ptr2, 
modify_expr : ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 200: ptr2, 
return_expr : ptr2, 
modify_expr : ptr1, ptr2, 
test16.c: In function 'func2':
test16.c:26:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 300;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 300: ptr1, ptr2, 
block : ptr1, ptr2, 
function_decl func3: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_orif_expr : ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
test16.c: In function 'func3':
test16.c:31:27: warning: Using field 'ptr1' without checking for null pointer
     if (ptr1 || ptr1->val == 100)
                           ^
integer_cst 100: ptr1, ptr2, 
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
test16.c:36:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 200;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 200: ptr1, ptr2, 
block : ptr1, ptr2, 
function_decl func4: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_andif_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
test16.c: In function 'func4':
test16.c:41:28: warning: Using field 'ptr1' without checking for null pointer
     if (!ptr1 && ptr1->val == 100)
                            ^
integer_cst 100: ptr1, ptr2, 
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
test16.c:46:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 200;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 200: ptr1, ptr2, 
block : ptr1, ptr2, 
function_decl func5: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_orif_expr : ptr1, ptr2, 
truth_orif_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
integer_cst 100: ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 100: ptr2, 
truth_orif_expr : ptr2, 
eq_expr : ptr2, 
integer_cst 0: ptr2, 
parm_decl ptr2: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
integer_cst 0: ptr2, 
eq_expr : 
integer_cst 200: 
component_ref : 
indirect_ref : 
parm_decl ptr2: 
pointer_type : 
record_type : 
identifier_node Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 200: 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
pointer_type : 
record_type : 
identifier_node Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 300: 
modify_expr : ptr1, ptr2, 
component_ref : 
indirect_ref : 
parm_decl ptr2: 
pointer_type : 
record_type : 
identifier_node Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 400: 
block : ptr1, ptr2, 
function_decl func6: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
truth_andif_expr : ptr1, ptr2, 
truth_orif_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr2, 
integer_cst 100: ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 100: ptr2, 
truth_orif_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
eq_expr : ptr1, 
integer_cst 200: ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl ptr2: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
identifier_node Data1: ptr1, 
integer_cst 64: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 200: ptr1, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
test16.c: In function 'func6':
test16.c:67:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 300;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 300: ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
test16.c:68:15: warning: Using parameter 'ptr2' without checking for null pointer
     ptr2->val = 400;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr2: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 400: ptr1, ptr2, 
block : ptr1, ptr2, 
