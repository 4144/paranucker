function_decl func1: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
result_decl : ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 100: ptr2, 
block : ptr1, ptr2, 
test17.c: In function 'func2':
test17.c:18:14: warning: comparison between pointer and integer
     if (ptr1 == (123, 0))
              ^
function_decl func2: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
compound_expr : ptr1, ptr2, 
integer_cst 123: ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
result_decl : ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
test17.c:20:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 100;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
result_decl : ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
block : ptr1, ptr2, 
test17.c: In function 'func3':
test17.c:26:14: warning: comparison between pointer and integer
     if (ptr1 != (123, 0))
              ^
function_decl func3: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
compound_expr : ptr1, ptr2, 
integer_cst 123: ptr1, ptr2, 
ne_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
return_expr : ptr2, 
modify_expr : ptr2, 
result_decl : ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 32: ptr2, 
integer_cst 0: ptr2, 
modify_expr : ptr1, ptr2, 
test17.c:28:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 100;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
result_decl : ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
block : ptr1, ptr2, 
function_decl func4: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
var_decl k: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 10: ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
test17.c: In function 'func4':
test17.c:40:15: warning: Using parameter 'ptr1' without checking for null pointer
     ptr1->val = 100;
               ^
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
block : ptr1, ptr2, 
function_decl func5: 
bind_expr : ptr1, ptr2, 
statement_list : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
eq_expr : ptr1, ptr2, 
parm_decl ptr1: ptr1, ptr2, 
pointer_type : ptr1, ptr2, 
record_type : ptr1, ptr2, 
identifier_node Data1: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_type : ptr1, ptr2, 
type_decl int: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst -2147483648: ptr1, ptr2, 
integer_cst 2147483647: ptr1, ptr2, 
integer_cst 64: ptr1, ptr2, 
integer_cst 0: ptr1, ptr2, 
return_expr : ptr1, ptr2, 
cond_expr : ptr1, ptr2, 
ne_expr : ptr2, 
parm_decl ptr2: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 64: ptr2, 
integer_cst 0: ptr2, 
return_expr : 
modify_expr : ptr1, ptr2, 
component_ref : ptr2, 
indirect_ref : ptr2, 
parm_decl ptr1: ptr2, 
pointer_type : ptr2, 
record_type : ptr2, 
identifier_node Data1: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 64: ptr2, 
field_decl val: ptr2, 
integer_cst 32: ptr2, 
integer_type : ptr2, 
type_decl int: ptr2, 
integer_cst 32: ptr2, 
integer_cst -2147483648: ptr2, 
integer_cst 2147483647: ptr2, 
integer_cst 100: ptr2, 
block : ptr1, ptr2, 
