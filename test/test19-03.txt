function_decl func1: 
bind_expr : ptr1, ptr2, 
var_decl ptr3: ptr1, ptr2, ptr3, 
integer_cst 64: ptr1, ptr2, ptr3, 
parm_decl ptr1: ptr1, ptr2, ptr3, 
pointer_type : ptr1, ptr2, ptr3, 
record_type : ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
decl_expr : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
block : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
function_decl func2: 
bind_expr : ptr1, ptr2, 
var_decl ptr3: ptr1, ptr2, ptr3, 
integer_cst 64: ptr1, ptr2, ptr3, 
parm_decl ptr1: ptr1, ptr2, ptr3, 
pointer_type : ptr1, ptr2, ptr3, 
record_type : ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
statement_list : ptr1, ptr2, ptr3, 
decl_expr : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
cleanup_point_expr : ptr1, ptr2, ptr3, 
expr_stmt : ptr1, ptr2, ptr3, 
convert_expr : ptr1, ptr2, ptr3, 
modify_expr : ptr1, ptr2, ptr3, 
component_ref : ptr1, ptr2, ptr3, 
test19.cpp: In function 'int func2(Data1*, Data1*)':
test19.cpp:16:11: warning: Using variable 'ptr3' without checking for null pointer
     ptr3->val = 100;
           ^
indirect_ref : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
integer_cst 100: ptr1, ptr2, ptr3, 
block : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
function_decl func3: 
bind_expr : ptr1, ptr2, 
var_decl ptr3: ptr1, ptr2, ptr3, 
integer_cst 64: ptr1, ptr2, ptr3, 
parm_decl ptr1: ptr1, ptr2, ptr3, 
pointer_type : ptr1, ptr2, ptr3, 
record_type : ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
statement_list : ptr1, ptr2, ptr3, 
decl_expr : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
if_stmt : ptr1, ptr2, ptr3, 
ne_expr : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
integer_cst 0: ptr1, ptr2, ptr3, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr1, ptr2, 
convert_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
var_decl ptr3: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
block : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
function_decl func4: 
bind_expr : ptr1, ptr2, 
var_decl ptr3: ptr1, ptr2, ptr3, 
integer_cst 64: ptr1, ptr2, ptr3, 
parm_decl ptr1: ptr1, ptr2, ptr3, 
pointer_type : ptr1, ptr2, ptr3, 
record_type : ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
statement_list : ptr1, ptr2, ptr3, 
decl_expr : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
if_stmt : ptr1, ptr2, ptr3, 
ne_expr : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
integer_cst 0: ptr1, ptr2, ptr3, 
cleanup_point_expr : ptr1, ptr2, 
expr_stmt : ptr1, ptr2, 
convert_expr : ptr1, ptr2, 
modify_expr : ptr1, ptr2, 
component_ref : ptr1, ptr2, 
indirect_ref : ptr1, ptr2, 
var_decl ptr3: ptr1, ptr2, 
field_decl val: ptr1, ptr2, 
integer_cst 32: ptr1, ptr2, 
integer_cst 100: ptr1, ptr2, 
if_stmt : ptr1, ptr2, ptr3, 
truth_andif_expr : ptr1, ptr2, ptr3, 
eq_expr : ptr1, ptr2, ptr3, 
parm_decl ptr1: ptr1, ptr2, ptr3, 
pointer_type : ptr1, ptr2, ptr3, 
record_type : ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
integer_cst 64: ptr1, ptr2, ptr3, 
integer_cst 0: ptr1, ptr2, ptr3, 
ne_expr : ptr1, ptr2, ptr3, 
parm_decl ptr2: ptr1, ptr2, ptr3, 
pointer_type : ptr1, ptr2, ptr3, 
record_type : ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
field_decl val: ptr1, ptr2, ptr3, 
integer_cst 32: ptr1, ptr2, ptr3, 
type_decl Data1: ptr1, ptr2, ptr3, 
integer_cst 64: ptr1, ptr2, ptr3, 
integer_cst 0: ptr1, ptr2, ptr3, 
cleanup_point_expr : ptr1, ptr3, 
expr_stmt : ptr1, ptr3, 
convert_expr : ptr1, ptr3, 
modify_expr : ptr1, ptr3, 
component_ref : ptr1, ptr3, 
indirect_ref : ptr1, ptr3, 
parm_decl ptr2: ptr1, ptr3, 
pointer_type : ptr1, ptr3, 
record_type : ptr1, ptr3, 
type_decl Data1: ptr1, ptr3, 
field_decl val: ptr1, ptr3, 
integer_cst 32: ptr1, ptr3, 
type_decl Data1: ptr1, ptr3, 
integer_cst 64: ptr1, ptr3, 
field_decl val: ptr1, ptr3, 
integer_cst 32: ptr1, ptr3, 
integer_cst 200: ptr1, ptr3, 
block : ptr1, ptr2, ptr3, 
var_decl ptr3: ptr1, ptr2, ptr3, 
