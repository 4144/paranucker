function_decl getData3: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl ptrval: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
function_decl getData2: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl ptrval: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
function_decl getData3: 
statement_list : 
expr_stmt : 
convert_expr : 
modify_expr : 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
indirect_ref : 
parm_decl k: 
reference_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 64: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl ptrval: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
function_decl getData4: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
integer_cst 0: 
function_decl getData5: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
addr_expr : 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl perm: 
integer_cst 256: 
record_type : 
type_decl Data2: 
function_decl getData6: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
integer_cst 0: 
function_decl getData1: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Object1: 
integer_cst 64: 
field_decl tmp2: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
function_decl getData2: 
return_expr : 
init_expr : 
result_decl : 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Object1: 
integer_cst 64: 
field_decl tmp2: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
function_decl func1: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
test42.cpp: In member function 'void Object1::func1(Data1*) const':
test42.cpp:74:24: warning: Using variable 'this->tmp1' without checking for null pointer
         tmp1->val = 100;
                        ^
component_ref : ptr1, 
indirect_ref : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl tmp1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func2: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl tmp3: ptr1, 
tree_list : ptr1, 
identifier_node nonnullpointer: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func3: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
test42.cpp: In member function 'void Object1::func3(Data1*) const':
test42.cpp:84:25: warning: Using variable 'gptr1' without checking for null pointer
         gptr1->val = 100;
                         ^
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func4: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr2: ptr1, 
tree_list : ptr1, 
identifier_node nonnullpointer: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func5: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
call_expr : ptr1, 
addr_expr : ptr1, 
function_decl getData2: ptr1, 
test42.cpp: In member function 'void Object1::func5(Data1*) const':
test42.cpp:94:23: warning: Using variable 'this->tmp1' without checking for null pointer
         tmp1->getData2();
                       ^
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl tmp1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
function_decl func6: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
call_expr : ptr1, 
addr_expr : ptr1, 
function_decl getData2: ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl tmp3: ptr1, 
tree_list : ptr1, 
identifier_node nonnullpointer: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
function_decl Data1: 
bind_expr : 
expr_stmt : 
convert_expr : 
modify_expr : 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl _vptr.Data1: 
integer_cst 64: 
pointer_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
pointer_plus_expr : 
addr_expr : 
var_decl _ZTV5Data1: 
integer_cst 384: 
constructor : 
array_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_type : 
integer_cst 64: 
integer_cst 0: 
integer_cst 5: 
integer_cst 0: 
addr_expr : 
var_decl _ZTI5Data1: 
integer_cst 128: 
record_type : 
type_decl __class_type_info_pseudo: 
addr_expr : 
function_decl __comp_dtor : 
addr_expr : 
function_decl __deleting_dtor : 
addr_expr : 
function_decl getData3: 
addr_expr : 
function_decl getData6: 
array_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_type : 
integer_cst 64: 
integer_cst 0: 
integer_cst 5: 
integer_cst 16: 
block : 
function_decl __base_ctor : 
bind_expr : 
expr_stmt : 
convert_expr : 
modify_expr : 
component_ref : 
indirect_ref : 
parm_decl this: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl _vptr.Data1: 
integer_cst 64: 
pointer_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
pointer_plus_expr : 
addr_expr : 
var_decl _ZTV5Data1: 
integer_cst 384: 
constructor : 
array_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_type : 
integer_cst 64: 
integer_cst 0: 
integer_cst 5: 
integer_cst 0: 
addr_expr : 
var_decl _ZTI5Data1: 
integer_cst 128: 
record_type : 
type_decl __class_type_info_pseudo: 
addr_expr : 
function_decl __comp_dtor : 
addr_expr : 
function_decl __deleting_dtor : 
addr_expr : 
function_decl getData3: 
addr_expr : 
function_decl getData6: 
array_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_type : 
integer_cst 64: 
integer_cst 0: 
integer_cst 5: 
integer_cst 16: 
block : 
function_decl __comp_ctor : 
statement_list : 
function_decl func7: 
bind_expr : ptr1, 
statement_list : ptr1, 
decl_expr : ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
expr_stmt : ptr1, 
call_expr : ptr1, 
addr_expr : ptr1, 
function_decl __comp_ctor : ptr1, 
statement_list : ptr1, 
addr_expr : ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
cleanup_stmt : ptr1, 
statement_list : ptr1, 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
call_expr : ptr1, 
addr_expr : ptr1, 
function_decl __comp_dtor : ptr1, 
addr_expr : ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
block : ptr1, 
var_decl val1: ptr1, 
integer_cst 576: ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
function_decl func8: 
expr_stmt : 
convert_expr : 
modify_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 200: 
function_decl func9: 
bind_expr : ptr1, 
statement_list : ptr1, 
decl_expr : ptr1, 
var_decl val1: ptr1, val1, 
integer_cst 64: ptr1, val1, 
pointer_type : ptr1, val1, 
record_type : ptr1, val1, 
type_decl Data1: ptr1, val1, 
expr_stmt : ptr1, val1, 
convert_expr : ptr1, val1, 
modify_expr : ptr1, val1, 
test42.cpp: In member function 'void Object1::func9(Data1*) const':
test42.cpp:116:24: warning: Using variable 'val1' without checking for null pointer
         val1->val = 300;
                        ^
test42.cpp:116:24: warning: Using variable 'val1' without checking for null pointer
component_ref : ptr1, val1, 
indirect_ref : ptr1, val1, 
var_decl val1: ptr1, val1, 
integer_cst 64: ptr1, val1, 
pointer_type : ptr1, val1, 
record_type : ptr1, val1, 
type_decl Data1: ptr1, val1, 
field_decl val: ptr1, val1, 
integer_cst 32: ptr1, val1, 
integer_type : ptr1, val1, 
type_decl int: ptr1, val1, 
integer_cst 32: ptr1, val1, 
integer_cst -2147483648: ptr1, val1, 
integer_cst 2147483647: ptr1, val1, 
integer_cst 300: ptr1, val1, 
var_decl val1: ptr1, 
integer_cst 64: ptr1, val1, 
pointer_type : ptr1, val1, 
record_type : ptr1, val1, 
type_decl Data1: ptr1, val1, 
block : ptr1, val1, 
var_decl val1: ptr1, val1, 
integer_cst 64: ptr1, val1, 
pointer_type : ptr1, val1, 
record_type : ptr1, val1, 
type_decl Data1: ptr1, val1, 
function_decl func10: 
if_stmt : 
eq_expr : 
integer_cst 100: 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 100: 
expr_stmt : 
convert_expr : 
modify_expr : 
var_decl k: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 100: 
function_decl func11: 
if_stmt : 
eq_expr : 
integer_cst 100: 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 100: 
expr_stmt : 
convert_expr : 
modify_expr : 
var_decl k: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 100: 
function_decl func12: 
bind_expr : 
statement_list : 
decl_expr : 
var_decl ref1: 
integer_cst 64: 
addr_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
reference_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
return_expr : 
init_expr : 
result_decl : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 32: 
indirect_ref : 
var_decl ref1: 
integer_cst 64: 
addr_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
reference_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
var_decl ref1: 
integer_cst 64: 
addr_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
reference_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
block : 
var_decl ref1: 
integer_cst 64: 
addr_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
reference_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
function_decl func13: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
call_expr : ptr1, 
addr_expr : ptr1, 
function_decl getData2: ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl tmp3: ptr1, 
tree_list : ptr1, 
identifier_node nonnullpointer: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func14: 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
call_expr : ptr1, 
addr_expr : ptr1, 
function_decl getData2: ptr1, 
test42.cpp: In member function 'void Object1::func14(Data1*) const':
test42.cpp:146:23: warning: Using variable 'this->tmp1' without checking for null pointer
         tmp1->getData2()->val = 100;
                       ^
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl tmp1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func15: 
if_stmt : ptr1, 
truth_andif_expr : ptr1, 
truth_andif_expr : ptr1, 
ne_expr : ptr1, 
integer_cst 0: ptr1, 
parm_decl ptr1: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 64: ptr1, 
integer_cst 0: ptr1, 
ne_expr : 
integer_cst 0: 
call_expr : 
obj_type_ref : 
indirect_ref : 
pointer_plus_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl _vptr.Data1: 
integer_cst 64: 
pointer_type : 
pointer_type : 
type_decl __vtbl_ptr_type: 
function_type : 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 24: 
parm_decl ptr1: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
integer_cst 3: 
parm_decl ptr1: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
integer_cst 0: 
eq_expr : 
integer_cst 200: 
var_decl k: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 200: 
expr_stmt : 
convert_expr : 
modify_expr : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 64: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 100: 
function_decl func16: 
if_stmt : 
ne_expr : 
integer_cst 0: 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl ptrval: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
integer_cst 0: 
expr_stmt : 
convert_expr : 
modify_expr : 
component_ref : 
indirect_ref : 
component_ref : 
indirect_ref : 
parm_decl ptr1: 
reference_type : 
record_type : 
type_decl Data2: 
integer_cst 64: 
field_decl ptrval: 
integer_cst 64: 
pointer_type : 
record_type : 
type_decl Data1: 
field_decl val: 
integer_cst 32: 
integer_type : 
type_decl int: 
integer_cst 32: 
integer_cst -2147483648: 
integer_cst 2147483647: 
integer_cst 100: 
function_decl func17: 
statement_list : ptr1, 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl x: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr2: ptr1, 
tree_list : ptr1, 
identifier_node nonnullpointer: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
parm_decl this: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Object1: ptr1, 
integer_cst 64: ptr1, 
field_decl y: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr2: ptr1, 
tree_list : ptr1, 
identifier_node nonnullpointer: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
function_decl func18: 
if_stmt : ptr1, 
truth_andif_expr : ptr1, 
ne_expr : ptr1, 
integer_cst 0: ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 0: ptr1, 
ne_expr : ptr1, 
integer_cst 0: ptr1, 
call_expr : ptr1, 
obj_type_ref : ptr1, 
indirect_ref : ptr1, 
pointer_plus_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl _vptr.Data1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
pointer_type : ptr1, 
type_decl __vtbl_ptr_type: ptr1, 
function_type : ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 24: ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 3: ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 0: ptr1, 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
function_decl func19: 
if_stmt : ptr1, 
truth_andif_expr : ptr1, 
ne_expr : ptr1, 
integer_cst 0: ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 0: ptr1, 
ne_expr : ptr1, 
integer_cst 0: ptr1, 
call_expr : ptr1, 
obj_type_ref : ptr1, 
indirect_ref : ptr1, 
pointer_plus_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl _vptr.Data1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
pointer_type : ptr1, 
type_decl __vtbl_ptr_type: ptr1, 
function_type : ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 24: ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 3: ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
integer_cst 0: ptr1, 
expr_stmt : ptr1, 
convert_expr : ptr1, 
modify_expr : ptr1, 
component_ref : ptr1, 
indirect_ref : ptr1, 
var_decl gptr1: ptr1, 
integer_cst 64: ptr1, 
pointer_type : ptr1, 
record_type : ptr1, 
type_decl Data1: ptr1, 
field_decl val: ptr1, 
integer_cst 32: ptr1, 
integer_type : ptr1, 
type_decl int: ptr1, 
integer_cst 32: ptr1, 
integer_cst -2147483648: ptr1, 
integer_cst 2147483647: ptr1, 
integer_cst 100: ptr1, 
